Exercice 1 :

2) La difference entre python3 hello.py et python3 -i hello est qu'avec l'option -i il existe le fichier hello.py et ouvre l'interpreteur/interface de python.

3) Avec la commande import hello quand on refait dir() cela va afficher 'hello' dans la liste des identificateurs connus.

4) Quand on tente de l'executer cela affiche :

./hello.py: ligne 1: erreur de syntaxe près du symbole inattendu « "hello" »
./hello.py: ligne 1: `print("hello")'

Maintenant en ajoutant au debut du fichier :

#!/usr/bin/env python3

Quand on fait maintenant ./hello.py ça affiche hello

5) En faisant int/int ça nous donne le resultat en float et quand on fait int//int ça nous donne le resultat en int.

6)
from math import sqrt
sqrt(3)+56/9.0*abs(-1/4)+63**2
3972.2876063631243

7) Le "Bonjour le monde!" ne s'affiche pas mais après import imp et imp.reload(hello) il s'affiche


Exercice 2 :

1) La difference entre une variable non-définie et une variable dont la valeur est None il y en a une qui n'affiche rien et une autre qui affiche None.
Z = ""
print(Z) -> affiche rien
Z = None
print(Z) -> affiche None
dir()
On voit bien Z dans la liste des identificateurs connus.
del Z
dir()
On ne voit plus Z dans la liste des identificateurs connus.

2) True if Z == None else False

3) print("sans valeur") if Z == None else print("chaine vide") if Z == "" else print("autre")
ou "sans valeur" if Z == None else "chaine vide" if Z == "" else "autre"

4) Pour l'expression True if x > 0 else False
x = 3 -> True
x = -5 -> False
x = None -> l'expression ne comprend pas car on evalue None sur un int
x = non-définie -> l'expression ne comprend pas car on evalue un string sur un int


Exercice 3 :

1) for i in range (0, 9) :
        print(i)
    
>>>
0
1
2
3
4
5
6
7
8
>>>

2)
Pour la liste des entiers consécutifs de 0 à 9 :
list(range(10))

Pour la liste des entiers consécutifs de 2 à 10 :
list(range(2, 11))


Pour la liste des entiers pairs de 2 à 10 :
list(range(2, 11, 2))


Pour la liste décroissante des entiers pairs de 10 à 2 :
list(range(10, 1, -2))

3)
[i for i in range(0, 13, 2)]
[i for i in 'abcdef']






